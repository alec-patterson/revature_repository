<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-validation</artifactId>
</dependency>

Used for validation in java.

@Valid will check if something is initialized properly
If used on a database object it will check if all non-null fields are filled

@NotNull(message="") use on a column in our database class. 
Should throw an error if it is not filled


// Responds to the request something comes up as not valid
@ResponseStatus(HttpStatus.BAD_REQUEST)
	@ExceptionHandler(MethodArgumentNotValidException.class)
	public Map<String, String> handleValidationExceptions(
	  MethodArgumentNotValidException ex) {
	    Map<String, String> errors = new HashMap<>();
	    ex.getBindingResult().getAllErrors().forEach((error) -> {
	        String fieldName = ((FieldError) error).getField();
	        String errorMessage = error.getDefaultMessage();
	        errors.put(fieldName, errorMessage);
	    });
	    return errors;

@Transactional(readOnly=true, propagation=Propagation.NEVER)

@Transactional(isolation=Isolation.SERIALIZABLE, 
    rollbackFor={ContraintViolationException.class}, propagation=Propagation.REQUIRES_NEW)
    public ... create(... e) {
        return dao.save(e);
    }